<?php
namespace weixin\controllers;
use common\models\CardCouponsGrant;
use common\models\WxMember;
use common\tool\Wechat;
use common\wxpay\WxHelp;
use weixin\components\BaseController;
use Yii;
use yii\helpers\Html;
use yii\web\Cookie;

/**
 * Site controller
 */
class SiteController extends BaseController
{

	/**
	 * @inheritdoc
	 */
	public function behaviors()
	{
		return [];
	}

	/**
	 * @inheritdoc
	 */
	public function actions()
	{
		return [
			'error' => [
				'class' => 'yii\web\ErrorAction',
			],
		];
	}

	public function beforeAction($action)
	{
		$retailClient = trim(Yii::$app->request->get('retailClient',''));
		if($retailClient  === self::RETAILCLIENT){
			Yii::$app->response->cookies->add(new Cookie(['name'=>'retailClient','value'=>$retailClient,'httpOnly'=>false]));
		}
		return parent::beforeAction($action); // TODO: Change the autogenerated stub
	}

	/**
	 * Displays homepage.
	 *
	 * @return string
	 */
	public function actionIndex()
	{
		$token = Yii::$app->request->get('token','');
		return $this->redirect('/weixin/insurancesList.html?token='.$token);
		$d = [
			Html::a('用户登录','/weixin/login.html?token='.$token),
			Html::a('卡券激活','/weixin/cardActivate.html?token='.$token),
			Html::a('保险购买','/weixin/insurancesList.html?token='.$token),
			Html::a('保单查询','/weixin/ordersList.html?token='.$token)
		];
		echo implode('<br/>',$d);
		//return $this->redirect('/weixin/index.html');

	}

	/***
	 * 订单查询
	 */
	public function actionOrder()
	{
		$token = Yii::$app->request->get('token','');
		$is_login = trim(Yii::$app->request->cookies->getValue('isLogin'));
		if(!$is_login ){
			return $this->redirect('/weixin/login.html?token='.$token);
		}
		return $this->redirect('/weixin/ordersList.html?token='.$token);
	}


	/***
	 * 绑定手机号
	 */
	public function actionLogin()
	{
		$token = Yii::$app->request->get('token','');
		return $this->redirect('/weixin/login.html?token='.$token);
	}
	/***
	 * 卡券激活
	 */
	public function actionActivecard()
	{
		$token = Yii::$app->request->get('token','');

		return $this->redirect('/weixin/cardActivate.html?token='.$token);
	}

	/**
	 * 微信授权处理页面
	 **/
	public function actionAuth()
	{
		$appid = WxHelp::getWxConfig('APPID');
		$appse = WxHelp::getWxConfig('APPSECRET');
		$wechat = new Wechat(['appid' => $appid, 'appsecret' => $appse]);

		//授权跳转
		if (isset($_GET['code']) && $_GET['code']) {

			//step 1 获取token openid
			$json = $wechat->getOauthAccessToken();
			//var_dump($json);die;
			if ($json && $json['openid']) {
				$userInfo = $wechat->getUserInfo($json['openid']);
				if ($userInfo) {
					$wxMeber = WxMember::findOne(['openid' => $userInfo['openid']]);
					//var_dump($userInfo);var_dump($wxMeber);die;
					if (empty($wxMeber)) {
						$wxMeber = new WxMember();
						$wxMeber->setAttributes([
							'member_id' => 0,
							'openid' => $userInfo['openid'],
							'unionid' => $userInfo['unionid'],
							'client_type' => 'WEIXIN'
						]);
					}
					$wxMeber->attributes = [
						'nickname' => $userInfo['nickname'],
						'city' => $userInfo['city'],
						'province' => $userInfo['country'] . ' ' . $userInfo['province'],
						'headimgurl' => $userInfo['headimgurl'],
						'token' => md5(intval($wxMeber['member_id']) . $userInfo['openid']),
						'datetime' => date('Y-m-d H:i:s',time())];
					//登录成功
					if ($wxMeber->save(false)) {
						$token = $wxMeber['token'];
						//add token
						if($wxMeber['member_id']){
							Yii::$app->response->cookies->add(new Cookie(['name'=>'isLogin','value'=>1,'httpOnly'=>false]));
						}
						Yii::$app->response->cookies->add(new Cookie(['name'=>'wxToken','value'=>$token,'httpOnly'=>false]));
						Yii::$app->response->cookies->add(new Cookie(['name'=>'member_token','value'=>$token,'httpOnly'=>false]));
						//save session
						Yii::$app->session->set('authInfo',$wxMeber->getAttributes());
						if(!$wxMeber['member_id']){
							//未绑定
							return	$this->redirect('/weixin/login.html?token='.$token);
						}
						$state = Yii::$app->request->get('state', '');
						if($state){
							$reurl = trim($state,'baoxian');
							if(stripos($reurl,'?')!==false){
								$reurl = $reurl.'&token='.$token;
							}else{
								$reurl = $reurl.'?token='.$token;
							}
							return $this->redirect($reurl);
						}
						return	$this->redirect(['site/index','token'=>$token]);
					}
					return	$this->redirect(['site/index']);
				}
			}
		}
		$oauthRedirect = $wechat->getOauthRedirect(Yii::getAlias('@weixinSiteAuth'),'baoxian'.$_SERVER['REQUEST_URI'],'snsapi_userinfo');
		return $this->redirect($oauthRedirect);
	}

	public function actionReply()
	{
		$wechat = new Wechat(['token' => '627G60CCI7', //填写你设定的key
			'encodingaeskey' => 'Yhux4E677QPhw4exQ4j4ZQeq5Eqh6Ei7h44eIjIieVp' //填写加密用的EncodingAESKey，如接口为明文模式可忽略
		]);
		$wechat->valid();//明文或兼容模式可以在接口验证通过后注释此句，但加密模式一定不能注释，否则会验证失败
		$type = $wechat->getRev()->getRevType();
		$response = '';
		if (Wechat::MSGTYPE_TEXT == $type) {
			$content = $wechat->getRevContent();
			$content = trim(strip_tags($content));
			if (mb_strlen($content) === 7) {
				$row = CardCouponsGrant::findOne(['card_number' => $content]);
				if ($row) {
					$_string = $row->status == CardCouponsGrant::__STATUS_ACTIVE ? '本卡券于' . date("Y-m-d", $row->active_time) . '激活使用' : '';
					$response = sprintf("卡券序号：%s 状态: %s %s", $row->card_number, $row->getStatusText(), $_string);
				}
			}
		}
		if ($response) {
			$wechat->text($response)->reply();
		}
	}



}
